com_data_69.1 %>%
mutate(State = factor(case_when(
State_code == "35" ~ 'Andaman & Nicobar Islands',
State_code == '28' ~ 'Andhra Pradesh',
State_code == '12' ~ 'Arunachal Pradesh',
State_code == '18' ~ 'Assam',
State_code == '10' ~ 'Bihar',
State_code == '04' ~ 'Chandigarh',
State_code == '22' ~ 'Chhattisgarh',
State_code == '26' ~ 'Dadra & Nagar Haveli',
State_code == '25' ~ 'Daman & Diu',
State_code == '07' ~ 'Delhi',
State_code == '30' ~ 'Goa',
State_code == '24' ~ 'Gujarat',
State_code == '06' ~ 'Haryana',
State_code == '02' ~ 'Himachal Pradesh',
State_code == '01' ~ 'Jammu & Kashmir',
State_code == '20' ~ 'Jharkhand',
State_code == '29' ~ 'Karnataka',
State_code == '32' ~ 'Kerala',
State_code == '31' ~ 'Lakshadweep',
State_code == '23' ~ 'Madhya Pradesh',
State_code == '27' ~ 'Maharashtra',
State_code == '14' ~ 'Manipur',
State_code == '17' ~ 'Meghalaya',
State_code == '15' ~ 'Mizoram',
State_code == '13' ~ 'Nagaland',
State_code == '21' ~ 'Odisha',
State_code == '34' ~ 'Puducherry',
State_code == '03' ~ 'Punjab',
State_code == '08' ~ 'Rajasthan',
State_code == '11' ~ 'Sikkim',
State_code == '33' ~ 'Tamil Nadu',
State_code == '16' ~ 'Tripura',
State_code == '05' ~ 'Uttarakhand',
State_code == '09' ~ 'Uttarpradesh',
State_code == '19' ~ 'West Bengal'
)))
library(tidyverse)
# ------------------------------------------------
# add state names using codes for mapping
com_data_69.2 <-
com_data_69.1 %>%
mutate(State = factor(case_when(
State_code == "35" ~ 'Andaman & Nicobar Islands',
State_code == '28' ~ 'Andhra Pradesh',
State_code == '12' ~ 'Arunachal Pradesh',
State_code == '18' ~ 'Assam',
State_code == '10' ~ 'Bihar',
State_code == '04' ~ 'Chandigarh',
State_code == '22' ~ 'Chhattisgarh',
State_code == '26' ~ 'Dadra & Nagar Haveli',
State_code == '25' ~ 'Daman & Diu',
State_code == '07' ~ 'Delhi',
State_code == '30' ~ 'Goa',
State_code == '24' ~ 'Gujarat',
State_code == '06' ~ 'Haryana',
State_code == '02' ~ 'Himachal Pradesh',
State_code == '01' ~ 'Jammu & Kashmir',
State_code == '20' ~ 'Jharkhand',
State_code == '29' ~ 'Karnataka',
State_code == '32' ~ 'Kerala',
State_code == '31' ~ 'Lakshadweep',
State_code == '23' ~ 'Madhya Pradesh',
State_code == '27' ~ 'Maharashtra',
State_code == '14' ~ 'Manipur',
State_code == '17' ~ 'Meghalaya',
State_code == '15' ~ 'Mizoram',
State_code == '13' ~ 'Nagaland',
State_code == '21' ~ 'Odisha',
State_code == '34' ~ 'Puducherry',
State_code == '03' ~ 'Punjab',
State_code == '08' ~ 'Rajasthan',
State_code == '11' ~ 'Sikkim',
State_code == '33' ~ 'Tamil Nadu',
State_code == '16' ~ 'Tripura',
State_code == '05' ~ 'Uttarakhand',
State_code == '09' ~ 'Uttarpradesh',
State_code == '19' ~ 'West Bengal'
)))
max(4,5)
# ------------------------------------------------
# add state names using codes for mapping
com_data_69.2 <-
com_data_69.1 %>%
mutate(State = factor(case_when(
State_code == "35" ~ 'Andaman & Nicobar Islands',
State_code == '28' ~ 'Andhra Pradesh',
State_code == '12' ~ 'Arunachal Pradesh',
State_code == '18' ~ 'Assam',
State_code == '10' ~ 'Bihar',
State_code == '04' ~ 'Chandigarh',
State_code == '22' ~ 'Chhattisgarh',
State_code == '26' ~ 'Dadra & Nagar Haveli',
State_code == '25' ~ 'Daman & Diu',
State_code == '07' ~ 'Delhi',
State_code == '30' ~ 'Goa',
State_code == '24' ~ 'Gujarat',
State_code == '06' ~ 'Haryana',
State_code == '02' ~ 'Himachal Pradesh',
State_code == '01' ~ 'Jammu & Kashmir',
State_code == '20' ~ 'Jharkhand',
State_code == '29' ~ 'Karnataka',
State_code == '32' ~ 'Kerala',
State_code == '31' ~ 'Lakshadweep',
State_code == '23' ~ 'Madhya Pradesh',
State_code == '27' ~ 'Maharashtra',
State_code == '14' ~ 'Manipur',
State_code == '17' ~ 'Meghalaya',
State_code == '15' ~ 'Mizoram',
State_code == '13' ~ 'Nagaland',
State_code == '21' ~ 'Odisha',
State_code == '34' ~ 'Puducherry',
State_code == '03' ~ 'Punjab',
State_code == '08' ~ 'Rajasthan',
State_code == '11' ~ 'Sikkim',
State_code == '33' ~ 'Tamil Nadu',
State_code == '16' ~ 'Tripura',
State_code == '05' ~ 'Uttarakhand',
State_code == '09' ~ 'Uttarpradesh',
State_code == '19' ~ 'West Bengal'
)),
high_edu = as.factor(max(highest_edu_m, highest_edu_f)))
# ------------------------------------------------
# add state names using codes for mapping
com_data_69.2 <-
com_data_69.1 %>%
mutate(State = factor(case_when(
State_code == "35" ~ 'Andaman & Nicobar Islands',
State_code == '28' ~ 'Andhra Pradesh',
State_code == '12' ~ 'Arunachal Pradesh',
State_code == '18' ~ 'Assam',
State_code == '10' ~ 'Bihar',
State_code == '04' ~ 'Chandigarh',
State_code == '22' ~ 'Chhattisgarh',
State_code == '26' ~ 'Dadra & Nagar Haveli',
State_code == '25' ~ 'Daman & Diu',
State_code == '07' ~ 'Delhi',
State_code == '30' ~ 'Goa',
State_code == '24' ~ 'Gujarat',
State_code == '06' ~ 'Haryana',
State_code == '02' ~ 'Himachal Pradesh',
State_code == '01' ~ 'Jammu & Kashmir',
State_code == '20' ~ 'Jharkhand',
State_code == '29' ~ 'Karnataka',
State_code == '32' ~ 'Kerala',
State_code == '31' ~ 'Lakshadweep',
State_code == '23' ~ 'Madhya Pradesh',
State_code == '27' ~ 'Maharashtra',
State_code == '14' ~ 'Manipur',
State_code == '17' ~ 'Meghalaya',
State_code == '15' ~ 'Mizoram',
State_code == '13' ~ 'Nagaland',
State_code == '21' ~ 'Odisha',
State_code == '34' ~ 'Puducherry',
State_code == '03' ~ 'Punjab',
State_code == '08' ~ 'Rajasthan',
State_code == '11' ~ 'Sikkim',
State_code == '33' ~ 'Tamil Nadu',
State_code == '16' ~ 'Tripura',
State_code == '05' ~ 'Uttarakhand',
State_code == '09' ~ 'Uttarpradesh',
State_code == '19' ~ 'West Bengal'
)),
high_edu = as.factor(max(as.numeric(highest_edu_m),
as.numeric(highest_edu_f))))
com_data_69.2$high_edu |> table()
max(as.numeric(highest_edu_m),
as.numeric(highest_edu_f)))
max(as.numeric(highest_edu_m),
as.numeric(highest_edu_f))
max(as.numeric(com_data_69.2$highest_edu_m),
as.numeric(com_data_69.2$highest_edu_f))
com_data_69.2$highest_edu_f
# ------------------------------------------------
# add state names using codes for mapping
com_data_69.2 <-
com_data_69.1 %>%
mutate(State = factor(case_when(
State_code == "35" ~ 'Andaman & Nicobar Islands',
State_code == '28' ~ 'Andhra Pradesh',
State_code == '12' ~ 'Arunachal Pradesh',
State_code == '18' ~ 'Assam',
State_code == '10' ~ 'Bihar',
State_code == '04' ~ 'Chandigarh',
State_code == '22' ~ 'Chhattisgarh',
State_code == '26' ~ 'Dadra & Nagar Haveli',
State_code == '25' ~ 'Daman & Diu',
State_code == '07' ~ 'Delhi',
State_code == '30' ~ 'Goa',
State_code == '24' ~ 'Gujarat',
State_code == '06' ~ 'Haryana',
State_code == '02' ~ 'Himachal Pradesh',
State_code == '01' ~ 'Jammu & Kashmir',
State_code == '20' ~ 'Jharkhand',
State_code == '29' ~ 'Karnataka',
State_code == '32' ~ 'Kerala',
State_code == '31' ~ 'Lakshadweep',
State_code == '23' ~ 'Madhya Pradesh',
State_code == '27' ~ 'Maharashtra',
State_code == '14' ~ 'Manipur',
State_code == '17' ~ 'Meghalaya',
State_code == '15' ~ 'Mizoram',
State_code == '13' ~ 'Nagaland',
State_code == '21' ~ 'Odisha',
State_code == '34' ~ 'Puducherry',
State_code == '03' ~ 'Punjab',
State_code == '08' ~ 'Rajasthan',
State_code == '11' ~ 'Sikkim',
State_code == '33' ~ 'Tamil Nadu',
State_code == '16' ~ 'Tripura',
State_code == '05' ~ 'Uttarakhand',
State_code == '09' ~ 'Uttarpradesh',
State_code == '19' ~ 'West Bengal'
)),
high_edu = as.factor(if_else(
highest_edu_m > highest_edu_f, highest_edu_m, highest_edu_f)))
# ------------------------------------------------
# add state names using codes for mapping
com_data_69.2 <-
com_data_69.1 %>%
mutate(State = factor(case_when(
State_code == "35" ~ 'Andaman & Nicobar Islands',
State_code == '28' ~ 'Andhra Pradesh',
State_code == '12' ~ 'Arunachal Pradesh',
State_code == '18' ~ 'Assam',
State_code == '10' ~ 'Bihar',
State_code == '04' ~ 'Chandigarh',
State_code == '22' ~ 'Chhattisgarh',
State_code == '26' ~ 'Dadra & Nagar Haveli',
State_code == '25' ~ 'Daman & Diu',
State_code == '07' ~ 'Delhi',
State_code == '30' ~ 'Goa',
State_code == '24' ~ 'Gujarat',
State_code == '06' ~ 'Haryana',
State_code == '02' ~ 'Himachal Pradesh',
State_code == '01' ~ 'Jammu & Kashmir',
State_code == '20' ~ 'Jharkhand',
State_code == '29' ~ 'Karnataka',
State_code == '32' ~ 'Kerala',
State_code == '31' ~ 'Lakshadweep',
State_code == '23' ~ 'Madhya Pradesh',
State_code == '27' ~ 'Maharashtra',
State_code == '14' ~ 'Manipur',
State_code == '17' ~ 'Meghalaya',
State_code == '15' ~ 'Mizoram',
State_code == '13' ~ 'Nagaland',
State_code == '21' ~ 'Odisha',
State_code == '34' ~ 'Puducherry',
State_code == '03' ~ 'Punjab',
State_code == '08' ~ 'Rajasthan',
State_code == '11' ~ 'Sikkim',
State_code == '33' ~ 'Tamil Nadu',
State_code == '16' ~ 'Tripura',
State_code == '05' ~ 'Uttarakhand',
State_code == '09' ~ 'Uttarpradesh',
State_code == '19' ~ 'West Bengal'
)),
high_edu = as.factor(if_else(
as.numeric(highest_edu_m) > as.numeric(highest_edu_f),
highest_edu_m, highest_edu_f)))
com_data_69.2$high_edu |> table()
wpi76 <- read.csv("C:\\Users\\Pravesh\\Downloads\\wpi.csv")
names(wpi76)
dim(wpi76)
library(tidyverse)
wpi76 |>
group_by(HHID)
wpi76 |> na.omit() |>
group_by(HHID)
wpi76 |> na.omit() |>
group_by(HHID) |>
summarise(mean(Age))
score_data <- com_data_69.2 |>
transmute(r1 = as.factor(
case_when(
water_sufficient_drink == 1 ~ 1,
water_sufficient_drink == 2 ~ 0)),
r2 = as.factor(
case_when(
water_sufficient == 1 ~ 1,
water_sufficient == 2 ~ 0)),
r3 = case_when(freq_water_supply %in% c(1,2) ~ 1,
freq_water_supply == 3 ~ 0.66,
freq_water_supply == 4 ~ 0.33,
freq_water_supply == 9 ~ 0),
a1 = case_when(access_to_source == 1 ~ 1,
access_to_source %in% c(2,3,4,5) ~ 0.66,
access_to_source %in% c(6,7) ~ 0.33,
access_to_source == 9 ~ 0),
a2 = case_when(distance_source_water == 1 ~ 1,
distance_source_water == 2 ~ 0.66,
distance_source_water == 3 ~ 0.33,
distance_source_water %in% c(4:7) ~ 0),
a3 = case_when(access_bathroom == 1 ~ 1,
access_bathroom == 2 ~ 0.66,
access_bathroom == 3 ~ 0.33,
access_bathroom == 9 ~ 0),
a4 = case_when(source_drinking_water %in% c(1:4) ~ 1,
source_drinking_water %in% c(5) ~ 0.66,
source_drinking_water %in% c(6:12) ~ 0.33,
source_drinking_water %in% c(19) ~ 0),
u1 = case_when(access_to_latrine %in% c(1) ~ 1,
access_to_latrine %in% c(2:4) ~ 0.66,
access_to_latrine %in% c(5) ~ 0.33,
access_to_latrine %in% c(9) ~ 0),
u2 = case_when(type_of_latrine %in% c(1) ~ 1,
type_of_latrine %in% c(2) ~ 0.66,
type_of_latrine %in% c(3:6) ~ 0.33,
type_of_latrine %in% c(7:10) ~ 0),
u3 = case_when(method_treat %in% c(1:2) ~ 1,
method_treat %in% c(3,4) ~ 0.66,
method_treat %in% c(5,6) ~ 0.33,
method_treat %in% c(7,9) ~ 0),
c1 = case_when(total_month_exp > 50000 ~ 1,
total_month_exp >= 25001 ~ 0.66,
total_month_exp >= 5001 ~ 0.33,
total_month_exp < 5000 ~ 0),
c2 = case_when(high_edu %in% c(8:10) ~ 1,
high_edu %in% c(6:7) ~ 0.66,
high_edu %in% c(2:5) ~ 0.33,
high_edu %in% c(1) ~ 0),
e1 = if_else(is_stagnant_water == 1, 1, 0),
e2 = case_when(disposal_waste_water %in% c(1) ~ 1,
disposal_waste_water %in% c(2,3,4) ~ 0.66,
disposal_waste_water %in% c(5) ~ 0.33,
disposal_waste_water %in% c(6,9) ~ 0),
e3 = case_when(garbage_collection %in% c(1) ~ 1,
garbage_collection %in% c(2) ~ 0.66,
garbage_collection %in% c(3) ~ 0.33,
garbage_collection %in% c(9) ~ 0)
)
View(score_data)
summary(score_data)
score_data <- com_data_69.2 |>
transmute(HHID, r1 = as.factor(
case_when(
water_sufficient_drink == 1 ~ 1,
water_sufficient_drink == 2 ~ 0)),
r2 = as.factor(
case_when(
water_sufficient == 1 ~ 1,
water_sufficient == 2 ~ 0)),
r3 = case_when(freq_water_supply %in% c(1,2) ~ 1,
freq_water_supply == 3 ~ 0.66,
freq_water_supply == 4 ~ 0.33,
freq_water_supply == 9 ~ 0),
a1 = case_when(access_to_source == 1 ~ 1,
access_to_source %in% c(2,3,4,5) ~ 0.66,
access_to_source %in% c(6,7) ~ 0.33,
access_to_source == 9 ~ 0),
a2 = case_when(distance_source_water == 1 ~ 1,
distance_source_water == 2 ~ 0.66,
distance_source_water == 3 ~ 0.33,
distance_source_water %in% c(4:7) ~ 0),
a3 = case_when(access_bathroom == 1 ~ 1,
access_bathroom == 2 ~ 0.66,
access_bathroom == 3 ~ 0.33,
access_bathroom == 9 ~ 0),
a4 = case_when(source_drinking_water %in% c(1:4) ~ 1,
source_drinking_water %in% c(5) ~ 0.66,
source_drinking_water %in% c(6:12) ~ 0.33,
source_drinking_water %in% c(19) ~ 0),
u1 = case_when(access_to_latrine %in% c(1) ~ 1,
access_to_latrine %in% c(2:4) ~ 0.66,
access_to_latrine %in% c(5) ~ 0.33,
access_to_latrine %in% c(9) ~ 0),
u2 = case_when(type_of_latrine %in% c(1) ~ 1,
type_of_latrine %in% c(2) ~ 0.66,
type_of_latrine %in% c(3:6) ~ 0.33,
type_of_latrine %in% c(7:10) ~ 0),
u3 = case_when(method_treat %in% c(1:2) ~ 1,
method_treat %in% c(3,4) ~ 0.66,
method_treat %in% c(5,6) ~ 0.33,
method_treat %in% c(7,9) ~ 0),
c1 = case_when(total_month_exp > 50000 ~ 1,
total_month_exp >= 25001 ~ 0.66,
total_month_exp >= 5001 ~ 0.33,
total_month_exp < 5000 ~ 0),
c2 = case_when(high_edu %in% c(8:10) ~ 1,
high_edu %in% c(6:7) ~ 0.66,
high_edu %in% c(2:5) ~ 0.33,
high_edu %in% c(1) ~ 0),
e1 = if_else(is_stagnant_water == 1, 1, 0),
e2 = case_when(disposal_waste_water %in% c(1) ~ 1,
disposal_waste_water %in% c(2,3,4) ~ 0.66,
disposal_waste_water %in% c(5) ~ 0.33,
disposal_waste_water %in% c(6,9) ~ 0),
e3 = case_when(garbage_collection %in% c(1) ~ 1,
garbage_collection %in% c(2) ~ 0.66,
garbage_collection %in% c(3) ~ 0.33,
garbage_collection %in% c(9) ~ 0)
)
score_data |> na.omit() |> summary()
score_data |> na.omit() |> table()
View(score_data)
score_data |>  summary()
wpi69 <- read.csv("C:\\Users\\Pravesh\\Downloads\\wpi_1.csv")
dim(wpi69)
View(wpi69)
wpi69 |>
group_by(Statename) |>
summarise(mean(wpi_mult))
wpi69 |>  na.omit() |>
group_by(Statename) |>
summarise(mean(wpi_mult))
wpi69 |>  na.omit() |>
group_by(Statename) |>
summarise(mean(wpi_mult)) |> View()
wpi76 |> group_by(HHID)
wpi76 |> filter(Relationship_head == 1)
wpi76 |> filter(Relationship_head == 1) |>
group_by(HHID)
wpi76 |> filter(Relationship_head == 1) |>
group_by(HHID) |>
mutate(range = as.factor(case_when(
wpi_mult < 0.3 ~ '< 0.3',
wpi_mult <= 0.5 ~ '0.3 - 0.5',
wpi_mult <= 0.7 ~ '0.5 - 0.7',
wpi_mult <= 0.9 ~ '0.7 - 0.9',
wpi_mult > 0.9 ~ '> 0.9')
))
wpi76_model <- wpi76 |>
filter(Relationship_head == 1) |>
group_by(HHID) |>
mutate(range = as.factor(case_when(
wpi_mult < 0.3 ~ 'Very Low',
wpi_mult <= 0.5 ~ 'Low',
wpi_mult <= 0.7 ~ 'Medium',
wpi_mult <= 0.9 ~ 'High',
wpi_mult > 0.9 ~ 'Very High')
))
wpi76_model |>
filter(range == "Very Low")
wpi76_model |>
filter(range == "High") |>
select(Access_source_water) |>
table()
wpi76_model <- wpi76 |>
filter(Relationship_head == 1) |>
group_by(HHID)
wpi76_model_1 <-
mutate(range = as.factor(case_when(
wpi_mult < 0.3 ~ 'Very Low',
wpi_mult <= 0.5 ~ 'Low',
wpi_mult <= 0.7 ~ 'Medium',
wpi_mult <= 0.9 ~ 'High',
wpi_mult > 0.9 ~ 'Very High')
))
wpi76_model
# read the shape file
library(sf)
districts_shp <- read_sf("DISTRICT_BOUNDARY.shp")
names(districts_shp)
library(tidyverse)
# arrange the districts alphabetically
districts_shp <- districts_shp |>
arrange(District)
# clean the data
for (i in 1:nrow(districts_shp)){
districts_shp$district[i] =
mgsub::mgsub(string = districts_shp$District[i],
pattern = c(">", "\\|", "\\@"),
replacement = c("A", "I", "U"))
}
shp_districts <- districts_shp |> select(district, geometry)
# read the nsso data
districts_nsso_raw <-
readr::read_tsv("master_dataset.txt")
# data cleaning
a <- districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative,
resource = RESOURCE,
access = Access,
use = USE,
capacity = Capacity,
environment = Environment,
wpi_pca = WPI_pca) |>
mutate(Sector = as.factor(Sector)) |>
arrange(district) |>
# remove #N/A string in district
filter(!(district %in% "#N/A")) |>
# change the names to upper case
mutate(district = str_to_upper(string = district, locale = "en"))
nsso_districts <- a |>
group_by(district) |>
summarise_at(vars(resource:wpi_pca), median)
# merging
final_districts <- left_join(nsso_districts, shp_districts, by = "district")
# convert to sf object
sf_final_districts <- st_sf(final_districts, sf_column_name = "geometry")
library(sf)
class(sf_final_districts)
summary(sf_final_districts$wpi_pca)
ggplot()+
geom_sf(data = sf_final_districts)
library(tmap)
ggplot()+
geom_sf(data = sf_final_districts) +
tm_borders()
ggplot()+
geom_sf(data = sf_final_districts) +
tm_borders()
ggplot()+
geom_sf(data = shp_districts)
ggplot()+
geom_sf(data = shp_districts) +
geom_sf(data = sf_final_districts)+
geom_sf(aes(fill = wpi_pca),
data = sf_final_districts) +
scale_fill_distiller(palette = 7, direction = 1)
