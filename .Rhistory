library(haven)
# import the data
library(haven)
d1 <- read_dta("R76120L01-Identification of sample household.dta")
View(d1)
d2 <- read_dta("R76120L02-Demographic and other particulars of household members.dta")
?read_dta()
# Load the Iris dataset
data(iris)
# Standardize the data
scaled_data <- scale(iris[, 1:4])
# Perform PCA
pca_result <- prcomp(scaled_data)
# View the summary of PCA
summary(pca_result)
# Access the loadings (weights)
loadings_matrix <- pca_result$rotation
loadings_matrix
# Plot the scree plot to visualize the proportion of variance explained by each PC
plot(pca_result, type = "l", main = "Scree Plot")
# Biplot to visualize both loadings and scores
biplot(pca_result)
install.packages("factoextra")
# install.packages("factoextra")
library(factoextra)
# Step 1: Calculate principal components
data(iris)
iris_pca <- prcomp(iris, scale = TRUE)
iris_pca <- prcomp(iris, scale. = TRUE)
# Step 1: Calculate principal components
data(iris)
# Step 1: Calculate principal components
data(iris)
#-----------------------------------
# Load the Iris dataset
data(iris)
# Step 1: Calculate principal components
data(iris)
iris_pca <- prcomp(iris, scale = TRUE)
iris_pca <- prcomp(iris, scale. = TRUE)
?prcomp()
iris_pca <- prcomp(iris[, 1:4], scale = TRUE)
iris_pca
names(iris_pca)
summary(iris_pca)
# Step 2: Ideal number of components
fviz_eig(iris_pca, addlabels = TRUE)
# Step 2: Ideal number of components
library(factoextra)
fviz_eig(iris_pca, addlabels = TRUE)
# Step 3: biplot
fviz_pca_biplot(iris_pca)
# Step 3: biplot
fviz_pca_biplot(iris_pca, label = "")
# Step 3: biplot
fviz_pca_biplot(iris_pca, label = "var")
# Step 3: biplot
fviz_pca_biplot(iris_pca, label = "var",
habillage = iris$Species)
# Step 2: Ideal number of components
library(factoextra)
fviz_eig(iris_pca, addlabels = TRUE)
# Step 3: biplot
fviz_pca_biplot(iris_pca, label = "var",
habillage = iris$Species)
names(iris_pca)
summary(iris_pca)
iris_pca$rotation
irids
iris
fviz_pca_biplot(iris_pca, label = "var")
summary(iris_pca)
iris_pca
iris_pca$rotation
# Access the unnormalized weights (loadings) for each principal component
weights_unnormalized <- pca_result$rotation
# Access the unnormalized weights (loadings) for each principal component
weights_unnormalized <- iris_pca$rotation
# Normalize the weights using the custom function
weights_normalized <- scale(weights_unnormalized, scale = FALSE) / sqrt(rowSums(weights_unnormalized^2))
weights_normalized
round(weights_normalized, 2)
round(weights_normalized, 1)
round(weights_normalized, 0)
round(weights_normalized, 3)
weights_normalized[1]
weights_normalized[1:4]
sum(weights_normalized[1:4])
scipen(999)
options(scipen = 999)
sum(weights_normalized[1:4])
class(weights_normalized)
dim(weights_normalized)
colSums(weights_normalized)
sum(c(0.1718189, -0.6185945,  0.2311661,  0.2156095))
0.17+0.23+0.21-0.61
0.17+0.23+0.21+0.61
28+32+58+3
weights_normalized
weights_unnormalized / rowSums(weights_unnormalized)
weights_unnormalized / colSums(weights_unnormalized)
# import the data
library(haven)
#### Import relevant data
d5 <- read_dta("R76120L05-Particulars of living facilities- drinking water, bathroom, sanitation, etc.dta",
col_select = c('water_sufficient_drink',
'water_sufficient',
'Frequency_water_supply',
'Insufficiency_water_Jan',
'Insufficiency_water_Feb',
'Insufficiency_water_Mar',
'Insufficiency_water_Apr',
'Insufficiency_water_May',
'Insufficiency_water_Jun',
'Insufficiency_water_Jul',
'Insufficiency_water_Aug',
'Insufficiency_water_Sep',
'Insufficiency_water_Oct',
'Insufficiency_water_Nov',
'Insufficiency_water_Dec',
'avg_amoun_month_rs',
'Distance_source_water',
'source_drinking_water,source_water_notdrinking',
'Access_source_water',
'Waiting_in_day_minu',
'bathroom_latrine_inpremises',
'Access_latrine, latrine_type',
'avg_amoun_month_rs',
'Method_treatment'))
#### Import relevant data
d5 <- read_dta("R76120L05-Particulars of living facilities- drinking water, bathroom, sanitation, etc.dta",
col_select = c('water_sufficient_drink',
'water_sufficient',
'Frequency_water_supply',
'Insufficiency_water_Jan',
'Insufficiency_water_Feb',
'Insufficiency_water_Mar',
'Insufficiency_water_Apr',
'Insufficiency_water_May',
'Insufficiency_water_Jun',
'Insufficiency_water_Jul',
'Insufficiency_water_Aug',
'Insufficiency_water_Sep',
'Insufficiency_water_Oct',
'Insufficiency_water_Nov',
'Insufficiency_water_Dec',
'avg_amoun_month_rs',
'Distance_source_water',
'source_drinking_water',
'source_water_notdrinking',
'Access_source_water',
'Waiting_in_day_minu',
'bathroom_latrine_inpremises',
'Access_latrine, latrine_type',
'avg_amoun_month_rs',
'Method_treatment'))
#### Import relevant data
d5 <- read_dta("R76120L05-Particulars of living facilities- drinking water, bathroom, sanitation, etc.dta",
col_select = c('water_sufficient_drink',
'water_sufficient',
'Frequency_water_supply',
'Insufficiency_water_Jan',
'Insufficiency_water_Feb',
'Insufficiency_water_Mar',
'Insufficiency_water_Apr',
'Insufficiency_water_May',
'Insufficiency_water_Jun',
'Insufficiency_water_Jul',
'Insufficiency_water_Aug',
'Insufficiency_water_Sep',
'Insufficiency_water_Oct',
'Insufficiency_water_Nov',
'Insufficiency_water_Dec',
'avg_amoun_month_rs',
'Distance_source_water',
'source_drinking_water',
'source_water_notdrinking',
'Access_source_water',
'Waiting_in_day_minu',
'bathroom_latrine_inpremises',
'Access_latrine', 'latrine_type',
'avg_amoun_month_rs',
'Method_treatment'))
#### Import relevant data
d5 <- read_dta("R76120L05-Particulars of living facilities- drinking water, bathroom, sanitation, etc.dta",
col_select = c('HHID', 'Sector', 'District', 'State',
'water_sufficient_drink',
'water_sufficient',
'Frequency_water_supply',
'Insufficiency_water_Jan',
'Insufficiency_water_Feb',
'Insufficiency_water_Mar',
'Insufficiency_water_Apr',
'Insufficiency_water_May',
'Insufficiency_water_Jun',
'Insufficiency_water_Jul',
'Insufficiency_water_Aug',
'Insufficiency_water_Sep',
'Insufficiency_water_Oct',
'Insufficiency_water_Nov',
'Insufficiency_water_Dec',
'avg_amoun_month_rs',
'Distance_source_water',
'source_drinking_water',
'source_water_notdrinking',
'Access_source_water',
'Waiting_in_day_minu',
'bathroom_latrine_inpremises',
'Access_latrine', 'latrine_type',
'avg_amoun_month_rs',
'Method_treatment'))
#### Import relevant data
d3 <- read_dta("R76120L03-Household characteristics.dta",
col_select = c('HHID', 'Sector', 'District', 'State',
'Total_Monthly_expenditure'))
d2 <- read_dta("R76120L02-Demographic and other particulars of household members.dta",
col_select = c('HHID', 'Sector', 'District', 'State', 'Gender', "Age",
"Marital_status","Highes_education", "latrine_code",
"type_latrine_used", "latrine_used_household"))
d3 <- read_dta("R76120L03-Household characteristics.dta",
col_select = c('HHID', 'Sector', 'District', 'State',
'Total_Monthly_expenditure'))
d5 <- read_dta("R76120L05-Particulars of living facilities- drinking water, bathroom, sanitation, etc.dta",
col_select = c('HHID', 'Sector', 'District', 'State',
'water_sufficient_drink',
'water_sufficient',
'Frequency_water_supply',
'Insufficiency_water_Jan',
'Insufficiency_water_Feb',
'Insufficiency_water_Mar',
'Insufficiency_water_Apr',
'Insufficiency_water_May',
'Insufficiency_water_Jun',
'Insufficiency_water_Jul',
'Insufficiency_water_Aug',
'Insufficiency_water_Sep',
'Insufficiency_water_Oct',
'Insufficiency_water_Nov',
'Insufficiency_water_Dec',
'avg_amoun_month_rs',
'Distance_source_water',
'source_drinking_water',
'source_water_notdrinking',
'Access_source_water',
'Waiting_in_day_minu',
'bathroom_latrine_inpremises',
'Access_latrine', 'latrine_type',
'avg_amoun_month_rs',
'Method_treatment',
'is_stagnant_water_around',
'availability_water_inlatrine'))
d6 <- read_dta('R76120L06-Housing characteristics and micro environment of the households living in houses.dta',
col_select = c('HHID', 'Sector', 'District', 'State',
'waste_disposal_system'))
?left_join()
library(tidyverse)
d6 |>
left_join(d5, join_by(c('HHID', 'Sector', 'District', 'State')))
d2 <- read_dta("R76120L02-Demographic and other particulars of household members.dta",
col_select = c('HHID', 'Gender', "Age",
"Marital_status","Highes_education", "latrine_code",
"type_latrine_used", "latrine_used_household"))
d3 <- read_dta("R76120L03-Household characteristics.dta",
col_select = c('HHID','Total_Monthly_expenditure'))
d5 <- read_dta("R76120L05-Particulars of living facilities- drinking water, bathroom, sanitation, etc.dta",
col_select = c('HHID','water_sufficient_drink',
'water_sufficient',
'Frequency_water_supply',
'Insufficiency_water_Jan',
'Insufficiency_water_Feb',
'Insufficiency_water_Mar',
'Insufficiency_water_Apr',
'Insufficiency_water_May',
'Insufficiency_water_Jun',
'Insufficiency_water_Jul',
'Insufficiency_water_Aug',
'Insufficiency_water_Sep',
'Insufficiency_water_Oct',
'Insufficiency_water_Nov',
'Insufficiency_water_Dec',
'avg_amoun_month_rs',
'Distance_source_water',
'source_drinking_water',
'source_water_notdrinking',
'Access_source_water',
'Waiting_in_day_minu',
'bathroom_latrine_inpremises',
'Access_latrine', 'latrine_type',
'avg_amoun_month_rs',
'Method_treatment',
'is_stagnant_water_around',
'availability_water_inlatrine'))
d6 <- read_dta('R76120L06-Housing characteristics and micro environment of the households living in houses.dta',
col_select = c('HHID', 'Sector', 'District', 'State',
'waste_disposal_system'))
d6 |>
left_join(d5, join_by(HHID))
com_data <- d6 |>
left_join(d5, join_by(HHID)) |>
left_join(d3, join_by(HHID)) |>
left_join(d2, join_by(HHID))
com_data <- d2 |>
left_join(d3, join_by(HHID)) |>
left_join(d5, join_by(HHID)) |>
left_join(d6, join_by(HHID))
com_data
com_data <- d2 |>
left_join(d3, join_by(HHID)) |>
left_join(d5, join_by(HHID)) |>
left_join(d6, join_by(HHID)) |>
relocate(HHID)
com_data
View(com_data)
write.csv(com_data, "com_data.csv")
write.csv(com_data, "com_data.csv")
com_data
com_data |> names()
summary(com_data$Frequency_water_supply)
table(com_data$Frequency_water_supply)
table(com_data$Frequency_water_supply[1:50])
# library
library(ggplot2)
# create a dataset
specie <- c(rep("sorgho" , 3) , rep("poacee" , 3) , rep("banana" , 3) , rep("triticum" , 3) )
condition <- rep(c("normal" , "stress" , "Nitrogen") , 4)
value <- abs(rnorm(12 , 0 , 15))
data <- data.frame(specie,condition,value)
data
# Stacked + percent
ggplot(data, aes(fill=condition, y=value, x=specie)) +
geom_bar(position="fill", stat="identity")
