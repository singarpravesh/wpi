t$names_cleaned[i] = mgsub::mgsub(t$names[i], c(">"), replacement = c("A"))
}
t
districts_names_shp <- districts_shp$District
districts_names_shp
?gsub
?mgsub
for (i in 1:nrow(t)){
t$names_cleaned[i] = mgsub::mgsub(string = t$names[i],
pattern = c(">", "\\|"), replacement = c("A", "I"))
}
t
for (i in 1:nrow(t)){
grepl(“[^A-Za-z0-9 ]”, t$names_cleaned)
?grepl
for (i in 1:nrow(t)){
grepl(“[^A-Za-z0-9 ]”, t$names_cleaned[i])
for (i in 1:nrow(t)){
grepl(“[^A-Za-z0-9]”, t$names_cleaned[i])
for (i in 1:nrow(t)){
grepl('[[:punct:]]', t$names_cleaned[i])
print()
}
for (i in 1:nrow(t)){
grepl('[[:punct:]]', x = t$names_cleaned[i])
print()
}
for (i in 1:nrow(t)){
grepl(pattern = '[[:punct:]]', x = t$names_cleaned[i])
}
for (i in 1:nrow(t)){
grepl(pattern = '[[:punct:]]', x = t$names_cleaned[i])
print()
}
for (i in 1:nrow(t)){
t$punc <- grepl(pattern = '[[:punct:]]', x = t$names_cleaned[i])
}
t
tab(t)
table(t)
for (i in 1:nrow(t)){
t$names_cleaned[i] = mgsub::mgsub(string = t$names[i],
pattern = c(">", "\\|", "\\@"), replacement = c("A", "I", "U"))
}
t
for (i in 1:nrow(t)){
t$punc <- grepl(pattern = '[[:punct:]]', x = t$names[i])
}
t
districts_names_shp %>%
as_tibble() %>%
rename(names = value) %>%
arrange(names) -> districts_names_shp_1
# clean the data
for (i in 1:nrow(districts_names_shp_1)){
districts_names_shp_1$names_cleaned[i] = mgsub::mgsub(sdistricts_names_shp_1ring = districts_names_shp_1$names[i],
pattern = c(">", "\\|", "\\@"), replacement = c("A", "I", "U"))
}
# clean the data
for (i in 1:nrow(districts_names_shp_1)){
districts_names_shp_1$names_cleaned[i] = mgsub::mgsub(string = districts_names_shp_1$names[i],
pattern = c(">", "\\|", "\\@"), replacement = c("A", "I", "U"))
}
districts_names_shp_1
?match()
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en")
districts_names_nsso
match(districts_names_shp_1$names_cleaned, districts_nsso$`District Name` )
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en") %>% arrange(`District Name`)
districts_names_nsso
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en") %>% arrange()
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en") %>% class()
districts_nsso$`District Name` %>%
str_to_upper(locale = "en") %>% class()
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en") %>% arrange_all()
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en")
districts_names_nsso
?sort
sort(c("a", "x", "b", "p"))
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en") %>% sort()
districts_names_nsso
match(districts_names_shp_1$names_cleaned, districts_names_nsso )
}
}
for (i in 1:nrow(districts_names_shp_1)){
for (j in 1:nrow(districts_names_nsso)){
districts_names_shp_1$final_district[i] <- if_else(districts_names_shp_1[i] %in% districts_names_nsso[j],
districts_names_shp_1[i],
"No")
}
}
library(sf)
library(ggplot2)
library(tidyverse)
data.frame(districts_names_shp_1$names_cleaned, districts_names_nsso ) |>
View()
?left_join
left_join(districts_names_nsso, districts_names_shp_1$names_cleaned ) |>
View()
?intersect
intersect(districts_names_nsso, districts_names_shp_1$names_cleaned)
districts_names_shp_1
library(sf)
source("E:/Project2023-24/maps.R", echo=TRUE)
intersect(districts_names_nsso, districts_names_shp_1$names_cleaned)
setdiff(districts_names_shp_1$names_cleaned, districts_names_nsso)
districts_names_nsso
setdiff(districts_names_shp_1$names_cleaned, districts_names_nsso)
x <- lettrers[1:10]
x <- letters[1:10]
x
r <- letters[2,5, 7]
r <- letters[c(2,5, 7)]
r
x <- data.frame(da = letters[1:10], val = 1:10)
x
x |>
filter(da = -r)
x |>
filter(da == -r)
?subset
x |>
filter(da != r)
x |>
subset(da != r)
x |>
subset(da %in% r)
x |>
subset(da %in% -r)
x |>
subset(da != r)
x |>
subset(da != "a")
for (i in 1:nrow(x)){
x1[i] <- subset(x, da[i] != "a")
}
for (i in 1:nrow(x)){
subset(x, da[i] != "a")
print()
}
for (i in 1:nrow(x)){
subset(x, da[i] != "a")
print(x)
}
x[-r,]
x[r,]
x <- data.frame(da = letters[1:10], val = 1:10)
r <- letters[c(2,5, 7)]
x[r,]
x[!(x$da == r), ]
x[!(x$da %in% r), ]
districts_not_in_nss <- setdiff(districts_names_shp_1$names_cleaned, districts_names_nsso)
districts_not_in_nss
districts_shp$District
districts_names_shp_1
districts_names_shp
districts_shp
districts_shp |>
arrange(District)
districts_shp <- districts_shp |>
arrange(District)
# clean the data
for (i in 1:nrow(districts_shp)){
districts_shp$district[i] =
mgsub::mgsub(string = districts_shp$District[i],
pattern = c(">", "\\|", "\\@"),
replacement = c("A", "I", "U"))
}
install.packages("mgsub")
# clean the data
for (i in 1:nrow(districts_shp)){
districts_shp$district[i] =
mgsub::mgsub(string = districts_shp$District[i],
pattern = c(">", "\\|", "\\@"),
replacement = c("A", "I", "U"))
}
districts_shp
View(districts_shp)
# read the nsso data
districts_nsso_raw <- readxl::read_excel("master_dataset.xlsx", sheet = "district_name")
districts_nsso <- districts_nsso_raw |>
arrange(`District Name`)
districts_nsso
# read the nsso data
districts_nsso_raw <-
readxl::read_excel("master_dataset.xlsx",
sheet = "data",
col_names = c("District name", "WPI_multiplicative"))
districts_nsso_raw
# read the nsso data
districts_nsso_raw <-
readxl::read_excel("master_dataset.xlsx",
sheet = "data",
col_names = c("District name", "WPI_multiplicative"))
?read_tsv()
# read the nsso data
districts_nsso_raw <-
readxl::read_tsv("master_dataset.txt")
# read the nsso data
districts_nsso_raw <-
readr::read_tsv("master_dataset.txt")
districts_nsso_raw
districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative)
districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative) |>
arrange(district)
districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative) |>
arrange(district) |>
na.omit()
districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative) |>
arrange(district) |>
filter(district %in% "#N/A")
districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative) |>
arrange(district) |>
filter(!(district %in% "#N/A"))
districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative) |>
arrange(district) |>
filter(!(district %in% "#N/A")) |>
str_to_upper(district, locale = "en")
districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative) |>
arrange(district) |>
filter(!(district %in% "#N/A")) |>
str_to_upper(string = district, locale = "en")
districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative) |>
arrange(district) |>
filter(!(district %in% "#N/A")) |>
mutate(district = str_to_upper(string = district, locale = "en"))
districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative) |>
arrange(district) |>
# remove #N/A string in district
filter(!(district %in% "#N/A")) |>
# change the names to upper case
mutate(district = str_to_upper(string = district, locale = "en")) |>
group_by(district) |>
summarise(wpi = median(wpi))
districts_nsso <-
districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative) |>
arrange(district) |>
# remove #N/A string in district
filter(!(district %in% "#N/A")) |>
# change the names to upper case
mutate(district = str_to_upper(string = district, locale = "en")) |>
group_by(district) |>
# calculate the mediam wip of the districts
summarise(wpi = median(wpi))
names(districts_shp)
names(districts_nsso)
districts_shp <- districts_shp |> select(district, geometry)
# merging
left_join(districts_nsso, districts_shp, by = "district")
# merging
final_distcts <- left_join(districts_nsso, districts_shp, by = "district")
# merging
final_districts <- left_join(districts_nsso, districts_shp, by = "district")
class(final_districts)
plot(final_districts$wpi)
?st_sf()
st_sf(final_districts, sf_column_name = "geometry")
sf_final_districts <- st_sf(final_districts, sf_column_name = "geometry")
plot(sf_final_districts$wpi)
plot(sf_final_districts[1])
ggolot(sf_final_districts)+
geom_polygon()
ggplot(sf_final_districts)+
geom_polygon()
ggplot(sf_final_districts)+
geom_sf()
ggplot()+
geom_sf(data = districts_shp)
wpi_map <- ggplot()+
geom_sf(data = districts_shp)+
geom_sf(aes(fill = wpi), data = sf_final_districts)
wpi_map
install.packages('ggplotly')
install.packages('plotly')
plotly::ggplotly(wpi_map)
wpi_map |> scale_color_brewer()
wpi_map + scale_color_brewer()
wpi_map <- ggplot()+
geom_sf(data = districts_shp)+
geom_sf(aes(fill = wpi), data = sf_final_districts)+
scale_fill_brewer(direction = -1)
wpi_map
wpi_map <- ggplot()+
geom_sf(data = districts_shp)+
geom_sf(aes(fill = wpi), data = sf_final_districts)+
scale_color_brewer(direction = -1)
wpi_map
wpi_map <- ggplot()+
geom_sf(data = districts_shp)+
geom_sf(aes(fill = as.factor(wpi)), data = sf_final_districts)+
scale_fill_brewer(direction = -1)
wpi_map
wpi_map <- ggplot()+
geom_sf(data = districts_shp)+
geom_sf(aes(fill = as.factor(wpi)), data = sf_final_districts)+
scale_fill_distiller(direction = -1)
wpi_map
wpi_map <- ggplot()+
geom_sf(data = districts_shp)+
geom_sf(aes(fill = wpi), data = sf_final_districts)+
scale_fill_distiller(direction = -1)
wpi_map
wpi_map <- ggplot()+
geom_sf(data = districts_shp, fill = "brown")+
geom_sf(aes(fill = wpi), data = sf_final_districts)
wpi_map
wpi_map <- ggplot()+
geom_sf(data = districts_shp, fill = "brown")+
geom_sf(aes(fill = wpi), data = sf_final_districts)+
scale_fill_distiller(type = "div")
wpi_map
wpi_map <- ggplot()+
geom_sf(data = districts_shp, fill = "brown")+
geom_sf(aes(fill = wpi), data = sf_final_districts)
wpi_map
# read the nsso data
districts_nsso_raw <-
readr::read_tsv("master_dataset.txt")
names(districts_nsso_raw)
# data cleaning
nsso_districts <-
districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative,
resource = RESOURCE,
access = Access,
use = USE,
capacity = Capacity,
environment = Environment,
wpi_pca = WPI_pca) |>
arrange(district) |>
# remove #N/A string in district
filter(!(district %in% "#N/A")) |>
# change the names to upper case
mutate(district = str_to_upper(string = district, locale = "en")) |>
group_by(district) |>
# calculate the median wpi of the districts
summarise(wpi = median(wpi))
shp_districts <- districts_shp |> select(district, geometry)
# merging
final_districts <- left_join(nsso_districts, shp_districts, by = "district")
sf_final_districts <- st_sf(final_districts, sf_column_name = "geometry")
# read the shape file
library(sf)
library(tidyverse)
# data cleaning
a <- districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative,
resource = RESOURCE,
access = Access,
use = USE,
capacity = Capacity,
environment = Environment,
wpi_pca = WPI_pca) |>
arrange(district) |>
# remove #N/A string in district
filter(!(district %in% "#N/A")) |>
# change the names to upper case
mutate(district = str_to_upper(string = district, locale = "en"))
nsso_districts <- a |>
group_by(district) |>
summarise_at(vars(resource:wpi_pca), median)
# merging
final_districts <- left_join(nsso_districts, shp_districts, by = "district")
sf_final_districts <- st_sf(final_districts, sf_column_name = "geometry")
sf_final_districts
# mapping
# wpi map
wpi_map <- ggplot()+
geom_sf(data = shp_districts, fill = "brown")+
geom_sf(aes(fill = wpi), data = sf_final_districts)
wpi_map
wpi_pca_map <- ggplot()+
geom_sf(data = shp_districts, fill = "brown")+
geom_sf(aes(fill = wpi_pca), data = sf_final_districts)
wpi_pca_map
resource_map <- ggplot()+
geom_sf(data = shp_districts, fill = "brown")+
geom_sf(aes(fill = resource), data = sf_final_districts)
resource_map
# read the shape file
library(sf)
library(tidyverse)
resource_map <- ggplot()+
geom_sf(data = shp_districts, fill = "brown")+
geom_sf(aes(fill = resource), data = sf_final_districts)
resource_map
use_map <- ggplot()+
geom_sf(data = shp_districts, fill = "brown")+
geom_sf(aes(fill = use), data = sf_final_districts)
use_map
?scale_fill_brewer
wpi_pca_map <- ggplot()+
geom_sf(data = shp_districts, fill = "white")+
geom_sf(aes(fill = wpi_pca), data = sf_final_districts)+
scale_fill_brewer(palette = 5, type = "div")
wpi_pca_map
wpi_pca_map <- ggplot()+
geom_sf(data = shp_districts, fill = "white")+
geom_sf(aes(fill = wpi_pca), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div")
wpi_pca_map
wpi_pca_map <- ggplot()+
geom_sf(data = shp_districts, fill = "grey")+
geom_sf(aes(fill = wpi_pca), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div", direction = -1)
wpi_pca_map
?ggsave()
wpi_pca_map <- ggplot()+
geom_sf(data = shp_districts, fill = "grey")+
geom_sf(aes(fill = wpi_pca), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div", direction = -1)
ggsave("wpi_pca_map.png")
wpi_map <- ggplot()+
geom_sf(data = shp_districts, fill = "grey")+
geom_sf(aes(fill = wpi), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div")
ggsave("wpi_map.png")
resource_map <- ggplot()+
geom_sf(data = shp_districts, fill = "brown")+
geom_sf(aes(fill = resource), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div")
ggsave("resource_map.png")
resource_map <- ggplot()+
geom_sf(data = shp_districts, fill = "grey")+
geom_sf(aes(fill = resource), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div")
ggsave("resource_map.png")
resource_map <- ggplot()+
geom_sf(data = shp_districts, fill = "black")+
geom_sf(aes(fill = resource), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div")
ggsave("resource_map.png")
wpi_pca_map <- ggplot()+
geom_sf(data = shp_districts, fill = "black")+
geom_sf(aes(fill = round(wpi_pca,1)), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div", direction = -1)
ggsave("wpi_pca_map.png")
sf_final_districts$wpi_pca
sf_final_districts$wpi_pca[1:10] |> round(1)
wpi_pca_map <- ggplot()+
geom_sf(data = shp_districts, fill = "black")+
geom_sf(aes(fill = round(sf_final_districts$wpi_pca,0)),
data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div", direction = -1)
ggsave("wpi_pca_map.png")
wpi_pca_map <- ggplot()+
geom_sf(data = shp_districts, fill = "black")+
geom_sf(aes(fill = round(sf_final_districts$wpi_pca,1)),
data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div", direction = -1)
ggsave("wpi_pca_map.png")
wpi_map <- ggplot()+
geom_sf(data = shp_districts, fill = "black")+
geom_sf(aes(fill = wpi), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div")
ggsave("wpi_map.png")
wpi_pca_map <- ggplot()+
geom_sf(data = shp_districts, fill = "black")+
geom_sf(aes(fill = wpi_pca),
data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div", direction = -1)
ggsave("wpi_pca_map.png")
use_map <- ggplot()+
geom_sf(data = shp_districts, fill = "black")+
geom_sf(aes(fill = use), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div")
ggsave("use_map.png")
environment_map <- ggplot()+
geom_sf(data = shp_districts, fill = "black")+
geom_sf(aes(fill = environment), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div")
ggsave("environment_map.png")
names(sf_final_districts)
access_map <- ggplot()+
geom_sf(data = shp_districts, fill = "black")+
geom_sf(aes(fill = access), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div")
ggsave("access_map.png")
capacity_map <- ggplot()+
geom_sf(data = shp_districts, fill = "black")+
geom_sf(aes(fill = capacity), data = sf_final_districts)+
scale_fill_distiller(palette = 5, type = "div")
ggsave("capacity_map.png")
