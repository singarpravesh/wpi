}
t
districts_names_shp <- districts_shp$District
districts_names_shp
?gsub
?mgsub
for (i in 1:nrow(t)){
t$names_cleaned[i] = mgsub::mgsub(string = t$names[i],
pattern = c(">", "\\|"), replacement = c("A", "I"))
}
t
for (i in 1:nrow(t)){
grepl(“[^A-Za-z0-9 ]”, t$names_cleaned)
?grepl
for (i in 1:nrow(t)){
grepl(“[^A-Za-z0-9 ]”, t$names_cleaned[i])
for (i in 1:nrow(t)){
grepl(“[^A-Za-z0-9]”, t$names_cleaned[i])
for (i in 1:nrow(t)){
grepl('[[:punct:]]', t$names_cleaned[i])
print()
}
for (i in 1:nrow(t)){
grepl('[[:punct:]]', x = t$names_cleaned[i])
print()
}
for (i in 1:nrow(t)){
grepl(pattern = '[[:punct:]]', x = t$names_cleaned[i])
}
for (i in 1:nrow(t)){
grepl(pattern = '[[:punct:]]', x = t$names_cleaned[i])
print()
}
for (i in 1:nrow(t)){
t$punc <- grepl(pattern = '[[:punct:]]', x = t$names_cleaned[i])
}
t
tab(t)
table(t)
for (i in 1:nrow(t)){
t$names_cleaned[i] = mgsub::mgsub(string = t$names[i],
pattern = c(">", "\\|", "\\@"), replacement = c("A", "I", "U"))
}
t
for (i in 1:nrow(t)){
t$punc <- grepl(pattern = '[[:punct:]]', x = t$names[i])
}
t
districts_names_shp %>%
as_tibble() %>%
rename(names = value) %>%
arrange(names) -> districts_names_shp_1
# clean the data
for (i in 1:nrow(districts_names_shp_1)){
districts_names_shp_1$names_cleaned[i] = mgsub::mgsub(sdistricts_names_shp_1ring = districts_names_shp_1$names[i],
pattern = c(">", "\\|", "\\@"), replacement = c("A", "I", "U"))
}
# clean the data
for (i in 1:nrow(districts_names_shp_1)){
districts_names_shp_1$names_cleaned[i] = mgsub::mgsub(string = districts_names_shp_1$names[i],
pattern = c(">", "\\|", "\\@"), replacement = c("A", "I", "U"))
}
districts_names_shp_1
?match()
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en")
districts_names_nsso
match(districts_names_shp_1$names_cleaned, districts_nsso$`District Name` )
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en") %>% arrange(`District Name`)
districts_names_nsso
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en") %>% arrange()
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en") %>% class()
districts_nsso$`District Name` %>%
str_to_upper(locale = "en") %>% class()
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en") %>% arrange_all()
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en")
districts_names_nsso
?sort
sort(c("a", "x", "b", "p"))
districts_names_nsso <- districts_nsso$`District Name` %>%
str_to_upper(locale = "en") %>% sort()
districts_names_nsso
match(districts_names_shp_1$names_cleaned, districts_names_nsso )
}
}
for (i in 1:nrow(districts_names_shp_1)){
for (j in 1:nrow(districts_names_nsso)){
districts_names_shp_1$final_district[i] <- if_else(districts_names_shp_1[i] %in% districts_names_nsso[j],
districts_names_shp_1[i],
"No")
}
}
# read the shape file
library(sf)
districts_shp <- read_sf("DISTRICT_BOUNDARY.shp")
names(districts_shp)
library(tidyverse)
# arrange the districts alphabetically
districts_shp <- districts_shp |>
arrange(District)
# clean the data
for (i in 1:nrow(districts_shp)){
districts_shp$district[i] =
mgsub::mgsub(string = districts_shp$District[i],
pattern = c(">", "\\|", "\\@"),
replacement = c("A", "I", "U"))
}
shp_districts <- districts_shp |> select(district, geometry)
# read the nsso data
districts_nsso_raw <-
readr::read_tsv("master_dataset.txt")
# read the nsso data
districts_nsso_raw <-
readr::read_tsv("master_dataset.txt")
# data cleaning
a <- districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative,
resource = RESOURCE,
access = Access,
use = USE,
capacity = Capacity,
environment = Environment,
wpi_pca = WPI_pca) |>
mutate(sector = as.factor(sector)) |>
arrange(district) |>
# remove #N/A string in district
filter(!(district %in% "#N/A")) |>
# change the names to upper case
mutate(district = str_to_upper(string = district, locale = "en"))
# data cleaning
a <- districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative,
resource = RESOURCE,
access = Access,
use = USE,
capacity = Capacity,
environment = Environment,
wpi_pca = WPI_pca) |>
mutate(Sector = as.factor(Sector)) |>
arrange(district) |>
# remove #N/A string in district
filter(!(district %in% "#N/A")) |>
# change the names to upper case
mutate(district = str_to_upper(string = district, locale = "en"))
a |>
group_by(district, sector) |>
summarise_at(vars(resource:wpi_pca), median)
a |>
group_by(district, Sector) |>
summarise_at(vars(resource:wpi_pca), median)
# by sector
nsso_districts_sector <- a |>
group_by(district, Sector) |>
summarise_at(vars(resource:wpi_pca), median)
# read the shape file
library(sf)
districts_shp <- read_sf("DISTRICT_BOUNDARY.shp")
library(tidyverse)
# arrange the districts alphabetically
districts_shp <- districts_shp |>
arrange(District)
# clean the data
for (i in 1:nrow(districts_shp)){
districts_shp$district[i] =
mgsub::mgsub(string = districts_shp$District[i],
pattern = c(">", "\\|", "\\@"),
replacement = c("A", "I", "U"))
}
shp_districts <- districts_shp |> select(district, geometry)
# read the nsso data
districts_nsso_raw <-
readr::read_tsv("master_dataset.txt")
# data cleaning
a <- districts_nsso_raw |>
rename(district = `District name`,
wpi = WPI_multiplicative,
resource = RESOURCE,
access = Access,
use = USE,
capacity = Capacity,
environment = Environment,
wpi_pca = WPI_pca) |>
mutate(Sector = as.factor(Sector)) |>
arrange(district) |>
# remove #N/A string in district
filter(!(district %in% "#N/A")) |>
# change the names to upper case
mutate(district = str_to_upper(string = district, locale = "en"))
nsso_districts <- a |>
group_by(district) |>
summarise_at(vars(resource:wpi_pca), median)
# merging
final_districts <- left_join(nsso_districts, shp_districts, by = "district")
# read the shape file
library(sf)
state_shp <- read_sf("Admin2.shp")
state_shp <- read_sf("shapefile_states_india/Admin2.shp")
names(state_shp)
library(tidyverse)
state_shp
# arrange the states alphabetically
state_shp <- state_shp |>
arrange(ST_NM) |>
rename( state = ST_NM)
state_shp
# read the nsso data# read the nsso dataDISTRICT
state_nsso_raw <-
readr::read_csv("data1.csv")
# read the nsso data# read the nsso dataDISTRICT
state_nsso_raw <-
readr::read_csv("data1.csv")
state_nsso_raw
View(state_nsso_raw)
# data cleaning
a <- state_nsso_raw |>
rename(state = `Statename`,
wpi = wpi_add,
wpi_pca = wpi_pca) |>
arrange(state)
View(a$state)
a$state
a |> group_by(state)
a |> group_by(state) |> summarise(mean(wpi))
a |> group_by(state) |> summarise(mean(wpi)) |> View()
state_shp$state |> View()
state_shp$state
state_shp <- read_sf("India Shape/india_st.shp")
names(state_shp)
state_shp$state
state_shp$STATE
shapefile_states_india
state_shp <- read_sf("shapefile_states_india/Admin2.shp")
# arrange the states alphabetically
state_shp <- state_shp |>
arrange(ST_NM) |>
rename( state = ST_NM)
state_shp$state
state$geometry
state_shp$geometry
jk <- read_sf("India Shape/india_st.shp")
jk
jk$STATE
jk$STATE["JAMMU AND KASHMIR"]
jk[14]
jk[14,]
jk[14,]$geometry
st_geometry(state_shp[14]) <- jk[14,]$geometry
st_geometry(state_shp[14,]) <- jk[14,]$geometry
state_shp[14,] <- jk[14,]$geometry
state_shp[14,]
st_geometry(state_shp[14,]) <- jk[14,]$geometry
jk[14,]
state_shp[14,]
st_geometry(state_shp[14,]) <- jk[14,]
st_geometry(state_shp[14,2]) <- jk[14,2]
jk[14,2]
jk[14,2][[1]]
state_shp[14,2][[1]]
st_geometry(state_shp[14,2][[1]]) <- jk[14,2][[1]]
st_geometry(state_shp[14,2][[1]]) <- NULL
state_shp |>
as_tibble()
as_tibble(jk)[14,2]
as_tibble(state_shp)[14,2]
as_tibble(state_shp)[14,2] <- as_tibble(jk)[14,2]
as_tibble(jk) -> b1
as_tibble(state_shp)-> b
b
b[14,2]
b[14,2] <- 0
b1[14,2]
b[14,2] <- b1[14,2]
b[14,2][[1]]
b1[14,2][[1]]
b[14,2][[1]] <- b1[14,2][[1]]
install.packages("spData")
library(sf)
library(dplyr)
library(terra)
library(spData)
data(us_states)
us_states[, "total_pop_15"]
us_states
us_states[us_states$REGION == "West", ]
us_states[us_states$NAME %in% c("Arizona","Colorado"),]
us_ari_cal = us_states[us_states$NAME %in% c("Arizona","Colorado"),]
st_union(us_ari_cal)
us_west_union = st_union(us_ari_cal)
us_west_union
us_west_union
us_states
us_ari_cal
class(us_west_union)
us_west_union
arizona = us_states[us_states$NAME == "Arizona",]
arizona
colorado = us_states[us_states$NAME == "Colorado",]
colorado
st_union(arizona, colorado)
us_west_union = st_union(arizona, colorado)
us_west_union
us_west_union
us_west_union
state_shp
state_shp <- read_sf("Admin2.shp")
state_shp <- read_sf("shapefile_states_india/Admin2.shp")
names(state_shp)
state_shp$ST_NM
state_shp |> arrange(ST_NM)
state_shp |> arrange(ST_NM) |> select(ST_NM)
state_shp |> arrange(ST_NM) |> select(ST_NM) |> print(n = 38)
state_shp |> arrange(ST_NM) |> select(ST_NM) |> print(n = 40)
state_shp |>
filter(ST_NM %in% -c("Jammu & Kashmir", "Ladakh"))
state_shp |>
filter(-ST_NM %in% c("Jammu & Kashmir", "Ladakh"))
state_shp |>
filter(ST_NM !%in% c("Jammu & Kashmir", "Ladakh"))
state_shp |>
filter(ST_NM %in% c(-"Jammu & Kashmir", -"Ladakh"))
state_shp |>
filter(ST_NM %in% c("Jammu & Kashmir", "Ladakh"))
state_shp |>
-filter(ST_NM %in% c("Jammu & Kashmir", "Ladakh"))
state_shp |>
!filter(ST_NM %in% c("Jammu & Kashmir", "Ladakh"))
state_shp |>
filter(!ST_NM %in% c("Jammu & Kashmir", "Ladakh"))
state_shp |>
filter(ST_NM %in% c("Jammu & Kashmir", "Ladakh")) |>
st_join(ST_NM)
state_shp |>
filter(ST_NM %in% c("Jammu & Kashmir", "Ladakh"))
state_shp |>
filter(ST_NM %in% c("Jammu & Kashmir", "Ladakh")) |>
st_join()
filter(ST_NM %in% c("Jammu & Kashmir")
jk <- state_shp |>
filter(ST_NM %in% c("Jammu & Kashmir"))
la <- state_shp |>
filter(ST_NM %in% c("Ladakh"))
st_join(jk, la)
st_join(jk, la)[, c(1,2)]
st_join(jk, la)[, c(1,2)] |>  plot()
plot(jk)
plot(la)
st_join(jk, la)[, c(1,2)]
st_join(jk, la)[, c(1,2)] |>  plot()
st_union(jk, la)[, c(1,2)]
st_union(jk, la)
st_union(jk, la)[, c(1,3)]
st_union(jk, la)[, c(1,3)] |>  plot()
jk_la <- st_union(jk, la)[, c(1,3)]
m1 <- state_shp |>
filter(!ST_NM %in% c("Jammu & Kashmir", "Ladakh"))
cbind(m1, jk_la)
rbind(m1, jk_la)
rbind(m1, jk_la) |> print(n = 40)
rbind(m1, jk_la) |> plot()
ggplot()+
geom_sf(data = rbind(m1, jk_la),
fill = "black")
library(ggplot2)
ggplot()+
geom_sf(data = rbind(m1, jk_la),
fill = "black")
state_shp <- rbind(m1, jk_la)
# arrange the states alphabetically
state_shp <- state_shp |>
arrange(ST_NM) |>
rename( state = ST_NM)
state_shp
# read the nsso data# read the nsso dataDISTRICT
state_nsso_raw <-
readr::read_csv("data1.csv")
# data cleaning
a <- state_nsso_raw |>
rename(state = `Statename`,
wpi = wpi_add,
wpi_pca = wpi_pca) |>
arrange(state)
nsso_state <- a |>
group_by(state) |>
summarise_at(vars(Environment:wpi_pca), mean)
nsso_state
filter(nsso_state,
!state %in% c("Dadra & Nagar Haveli",
"Daman & Diu"))
filter(nsso_state,
state %in% c("Dadra & Nagar Haveli",
"Daman & Diu"))
filter(nsso_state,
state %in% c("Dadra & Nagar Haveli",
"Daman & Diu")) |>
select(-state)
filter(nsso_state,
state %in% c("Dadra & Nagar Haveli",
"Daman & Diu")) |>
select(-state) |>
mutate(state = "Dadra and Nagar Haveli and Daman and Diu")
filter(nsso_state,
state %in% c("Dadra & Nagar Haveli",
"Daman & Diu")) |>
select(-state) |>
mutate(state = "Dadra and Nagar Haveli and Daman and Diu")
filter(nsso_state,
state %in% c("Dadra & Nagar Haveli",
"Daman & Diu")) |>
select(-state) |>
mutate(state = "Dadra and Nagar Haveli and Daman and Diu") |>
group_by(state) |>
summarize_all(mean)
filter(nsso_state,
state %in% c("Dadra & Nagar Haveli",
"Daman & Diu")) |>
select(-state) |>
mutate(state = "Dadra and Nagar Haveli and Daman and Diu") |>
group_by(state) |>
summarize_all(mean)
filter(nsso_state,
state %in% c("Dadra & Nagar Haveli",
"Daman & Diu")) |>
select(-state) |>
mutate(state = "Dadra and Nagar Haveli and Daman and Diu") |>
group_by(state) |>
summarize_all(mean) |>
rbind(filter(!state %in% c("Dadra & Nagar Haveli",
"Daman & Diu")))
rbind(filter(nsso_state,
!state %in% c("Dadra & Nagar Haveli",
"Daman & Diu")))
nsso_state2 <-
rbind(filter(nsso_state,
!state %in% c("Dadra & Nagar Haveli",
"Daman & Diu")))
rbind(nsso_state1, nsso_state2) |>
arrange(state)
nsso_state1 <-
filter(nsso_state,
state %in% c("Dadra & Nagar Haveli",
"Daman & Diu")) |>
select(-state) |>
mutate(state = "Dadra and Nagar Haveli and Daman and Diu") |>
group_by(state) |>
summarize_all(mean)
nsso_state2 <-
rbind(filter(nsso_state,
!state %in% c("Dadra & Nagar Haveli",
"Daman & Diu")))
rbind(nsso_state1, nsso_state2) |>
arrange(state)
nsso_state_final <- rbind(nsso_state1, nsso_state2) |>
arrange(state)
print(nsso_state_final, n = 40)
View(state_shp)
print(nsso_state_final$state, n = 40)
View(nsso_state_final$state)
print(nsso_state_final, n = 40)
# merging
final_state <- left_join(nsso_state_final, state_shp, by = "state")
# convert to sf object
sf_final_state <- st_sf(final_state, sf_column_name = "geometry")
ggsave("wpi_map.png")
wpi_map <- ggplot()+
geom_sf(data = state_shp, fill = "black")+
geom_sf(aes(fill = wpi), data = sf_final_state)+
scale_fill_distiller(palette = 7, type = "div")
ggsave("wpi_map.png")
state_shp[,31] |> plot()
state_shp[31,] |> plot()
sf_final_state
View(sf_final_state)
final_state
View(final_state)
# merging
final_state <- left_join(state_shp, nsso_state_final,  by = "state")
View(final_state)
View(nsso_state)
# convert to sf object
sf_final_state <- st_sf(final_state, sf_column_name = "geometry")
View(sf_final_state)
View(nsso_state_final)
nsso_state_final <- rbind(nsso_state1, nsso_state2) |>
arrange(state) |>
mutate(state = case_when(state == "Telengana" ~ "Telangana"))
View(nsso_state_final)
nsso_state_final <- rbind(nsso_state1, nsso_state2) |>
arrange(state)
rbind(nsso_state1, nsso_state2) |>
arrange(state) |>
mutate(state = ifelse(state == "Telengana", "Telangana", state))
nsso_state_final <- rbind(nsso_state1, nsso_state2) |>
arrange(state) |>
mutate(state = ifelse(state == "Telengana", "Telangana", state))
View(nsso_state_final)
# merging
final_state <- left_join(state_shp, nsso_state_final,  by = "state")
# convert to sf object
sf_final_state <- st_sf(final_state, sf_column_name = "geometry")
View(sf_final_state)
wpi_map <- ggplot()+
geom_sf(data = state_shp, fill = "black")+
geom_sf(aes(fill = wpi), data = sf_final_state)+
scale_fill_distiller(palette = 7, type = "div")
ggsave("wpi_map.png")
